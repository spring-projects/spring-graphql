anchors:
  docker-hub-task-params: &docker-hub-task-params
    DOCKER_HUB_USERNAME: ((docker-hub-username))
    DOCKER_HUB_PASSWORD: ((docker-hub-password))
  gradle-enterprise-task-params: &gradle-enterprise-task-params
    GRADLE_ENTERPRISE_ACCESS_KEY: ((gradle_enterprise_secret_access_key))
    GRADLE_ENTERPRISE_CACHE_USERNAME: ((gradle_enterprise_cache_user.username))
    GRADLE_ENTERPRISE_CACHE_PASSWORD: ((gradle_enterprise_cache_user.password))
  artifactory-task-params: &artifactory-task-params
    ARTIFACTORY_SERVER: ((artifactory-server))
    ARTIFACTORY_USERNAME: ((artifactory-username))
    ARTIFACTORY_PASSWORD: ((artifactory-password))
  registry-mirror-vars: &registry-mirror-vars
    registry-mirror-host: ((registry-mirror-host))
    registry-mirror-username: ((registry-mirror-username))
    registry-mirror-password: ((registry-mirror-password))
    
resource_types:
- name: artifactory-resource
  type: registry-image
  source:
    repository: springio/artifactory-resource
    tag: 0.0.17
- name: github-release
  type: registry-image
  source:
    repository: concourse/github-release-resource
    tag: 1.5.5

resources:
- name: git-repo
  type: git
  icon: github
  source:
    uri: ((github-repo))
    username: ((github-username))
    password: ((github-ci-release-token))
    branch: ((branch))
- name: ci-images-git-repo
  type: git
  icon: github
  source:
    uri: ((github-repo))
    branch: ((branch))
    paths: ["ci/images/*"]
- name: ci-image
  type: registry-image
  icon: docker
  source:
    username: ((docker-hub-username))
    password: ((docker-hub-password))
    tag: ((milestone))
    repository: ((docker-hub-organization))/spring-graphql-ci-image
- name: artifactory-repo
  type: artifactory-resource
  icon: package-variant
  source:
    uri: ((artifactory-server))
    username: ((artifactory-username))
    password: ((artifactory-password))
    build_name: ((build-name))
- name: github-pre-release
  type: github-release
  icon: briefcase-download-outline
  source:
    owner: spring-projects
    repository: spring-graphql
    access_token: ((github-ci-release-token))
    pre_release: true
    release: false

jobs:
- name: build-ci-images
  plan:
  - get: git-repo
  - get: ci-images-git-repo
    trigger: true
  - task: build-ci-image
    privileged: true
    file: git-repo/ci/tasks/build-ci-image.yml
    output_mapping:
      image: ci-image
    vars:
      ci-image-name: ci-image
      <<: *registry-mirror-vars
  - put: ci-image
    params:
      image: ci-image/image.tar
- name: build
  serial: true
  public: true
  plan:
  - get: ci-image
  - get: git-repo
    trigger: true
  - do:
    - task: build-project
      privileged: true
      timeout: ((task-timeout))
      image: ci-image
      file: git-repo/ci/tasks/build-project.yml
      params:
        BRANCH: ((branch))
        <<: *docker-hub-task-params
        <<: *gradle-enterprise-task-params
  - put: artifactory-repo
    params: &artifactory-params
      repo: libs-snapshot-local
      folder: distribution-repository
      build_uri: "https://ci.spring.io/teams/${BUILD_TEAM_NAME}/pipelines/${BUILD_PIPELINE_NAME}/jobs/${BUILD_JOB_NAME}/builds/${BUILD_NAME}"
      build_number: "${BUILD_PIPELINE_NAME}-${BUILD_JOB_NAME}-${BUILD_NAME}"
      disable_checksum_uploads: true
      threads: 8
      artifact_set:
        - include:
            - "/**/spring-graphql-docs-*.zip"
          properties:
            "zip.name": "spring-graphql"
            "zip.displayname": "Spring for GraphQL"
            "zip.deployed": "false"
            "zip.type": "docs"
    get_params:
      threads: 8
- name: stage-milestone
  serial: true
  plan:
    - get: ci-image
    - get: git-repo
      trigger: false
    - task: stage
      image: ci-image
      file: git-repo/ci/tasks/stage-version.yml
      params:
        RELEASE_TYPE: M
        <<: *gradle-enterprise-task-params
    - put: artifactory-repo
      params:
        <<: *artifactory-params
        repo: libs-staging-local
    - put: git-repo
      params:
        repository: stage-git-repo
- name: promote-milestone
  serial: true
  plan:
    - get: ci-image
    - get: git-repo
      trigger: false
    - get: artifactory-repo
      trigger: false
      passed: [stage-milestone]
      params:
        download_artifacts: false
        save_build_info: true
    - task: promote
      image: ci-image
      file: git-repo/ci/tasks/promote-version.yml
      params:
        RELEASE_TYPE: M
        <<: *artifactory-task-params
    - task: generate-changelog
      file: git-repo/ci/tasks/generate-changelog.yml
      params:
        RELEASE_TYPE: M
        GITHUB_USERNAME: ((github-username))
        GITHUB_TOKEN: ((github-ci-release-token))
      vars:
        <<: *registry-mirror-vars
    - put: github-pre-release
      params:
        name: generated-changelog/tag
        tag: generated-changelog/tag
        body: generated-changelog/changelog.md
- name: stage-rc
  serial: true
  plan:
    - get: ci-image
    - get: git-repo
      trigger: false
    - task: stage
      image: ci-image
      file: git-repo/ci/tasks/stage-version.yml
      params:
        RELEASE_TYPE: RC
        <<: *gradle-enterprise-task-params
    - put: artifactory-repo
      params:
        <<: *artifactory-params
        repo: libs-staging-local
    - put: git-repo
      params:
        repository: stage-git-repo
- name: promote-rc
  serial: true
  plan:
    - get: ci-image
    - get: git-repo
      trigger: false
    - get: artifactory-repo
      trigger: false
      passed: [stage-rc]
      params:
        download_artifacts: false
        save_build_info: true
    - task: promote
      image: ci-image
      file: git-repo/ci/tasks/promote-version.yml
      params:
        RELEASE_TYPE: RC
        <<: *artifactory-task-params
    - task: generate-changelog
      file: git-repo/ci/tasks/generate-changelog.yml
      params:
        RELEASE_TYPE: RC
        GITHUB_USERNAME: ((github-username))
        GITHUB_TOKEN: ((github-ci-release-token))
      vars:
        <<: *registry-mirror-vars
    - put: github-pre-release
      params:
        name: generated-changelog/tag
        tag: generated-changelog/tag
        body: generated-changelog/changelog.md

groups:
- name: "builds"
  jobs: ["build"]
- name: "releases"
  jobs: [ "stage-milestone", "promote-milestone", "stage-rc", "promote-rc" ]
- name: "ci-images"
  jobs: ["build-ci-images"]
