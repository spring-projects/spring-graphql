plugins {
	id 'org.springframework.boot' version "${bootVersion}"
	id 'java'
}
group = 'com.example'
description = "GraphQL over HTTP with Spring MVC Sample"
sourceCompatibility = '1.8'

ext['spring-graphql.version'] = version

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-graphql'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation project(':spring-graphql')
	testImplementation project(':spring-graphql-test')
	testImplementation 'org.springframework:spring-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jpa',
            'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final',
            'javax.annotation:javax.annotation-api'
}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

test {
	useJUnitPlatform()
}
